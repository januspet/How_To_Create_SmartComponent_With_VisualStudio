<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LibraryCompiler"
    targetNamespace="urn:abb-robotics-robotstudio-librarycompiler"
    elementFormDefault="qualified"
    xmlns="urn:abb-robotics-robotstudio-librarycompiler"
		xmlns:gc="urn:abb-robotics-robotstudio-graphiccomponent"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:import namespace="urn:abb-robotics-robotstudio-graphiccomponent"
						 schemaLocation="GraphicComponentSchema.xsd"/>

  <!-- Complex types -->
  
  <xs:complexType name="TInclude">
    <xs:annotation>
      <xs:documentation>Specifies an additional xml file to compile.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="source" type="xs:string">
      <xs:annotation>
        <xs:documentation>The path and filename of the file to include, relative to this file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TImage">
    <xs:annotation>
      <xs:documentation>
        Specifies an image to include in the metadata.
        The image can be generated from a 3D view of the component, or it can be an existing image.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="source" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Specifies the path and filename of an existing image file.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="generate" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>
          Specifies if the image should be generated from a 3D view of the component.
          The 3D view can be fine tuned using the flip, zoom, panx, pany and look attributes.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="flip" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>Flip the view upside down.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="zoom" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>An amount to zoom the view in or out.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="panx" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>An amount to pan the view left or right.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="pany" type="xs:int" use="optional">
      <xs:annotation>
        <xs:documentation>An amount to pan the view up or down.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="look" type="gc:TDoubleVector" use="optional">
      <xs:annotation>
        <xs:documentation>The direction in which to view the component.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TDocumentProperties">
    <xs:annotation>
      <xs:documentation>See also ABB.RoboticsRobotStudio.DocumentInfo.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="Title" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Document title.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Author" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Document author.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Revision" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Document revision.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Comments" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Document comments.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Image" type="TImage" minOccurs="0"/>
      <xs:element name="Type" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Document type.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="TVariable">
    <xs:annotation>
      <xs:documentation>Specifies that the string '{name}' in the following xml (attribute values or element text) will be replaced 'value'.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Name of the variable.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="value" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          Value of the variable. The content depends on where the variable will be used.
          For numeric values, a mathematical expression can be given, for example '{length}-1'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="condition" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>
          A boolean expression that decides if this variable will be added.
          Can contain other variables, for example '{side}==R'.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TAttribute">
    <xs:annotation>
      <xs:documentation>
        Obsolete and should not be used; attributes specified in Variant elements can be used directly using {name}.
        Declares an attribute that can be instantiated in the Variant element by adding a name='value' attribute.
        The value of the xml node specified by 'xpath' will be set to 'value'.
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Name of the attribute.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="xpath" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          XPath expression that specifies the node for which to set the value.
          Use 'gc' to specify the graphiccomponent namespace.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TVariant">
    <xs:annotation>
      <xs:documentation>
        Defines a single library variant. Arbitrary attributes can be added and used as variables using {name} notation in the component xml.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="DocumentProperties" type="TDocumentProperties" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Specifies metadata for the generated component.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
    <xs:attribute name="fileName" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          Specifies the name of the .rslib file for the variant.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute processContents="skip"/>
  </xs:complexType>

  <!-- Library element -->
   
  <xs:complexType name="TLibrary">
    <xs:annotation>
      <xs:documentation>
        Generates one or more library components with metadata.
        The component definition can either be inline (using an element derived from GraphicComponent),
        or in an separate file specified by the 'source' attribute.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="DocumentProperties" type="TDocumentProperties" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Specifies metadata for the component. Properties can be overriden in the Variant element.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Variable" type="TVariable" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="gc:GraphicComponent" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Defines the root component of the library, if the 'source' attribute is not used.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Attribute" type="TAttribute" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Variant" type="TVariant" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="source" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>An .rsxml or .txt file that defines the root component, if it is not defined inline.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fileName" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>
          Specifies the name of the .rslib file to create, when not using Variant elements.
          In LibraryTemplates.xml, this can contain patterns like 'Track_{length}.rslib' which will match a request for e.g. 'Track_5.rslib'.
          This can then be used as a variable, i.e. string '{length}' will be replaced by '5' in conditions and other attribute values.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <!-- Root element -->
    
  <xs:element name="LibraryCompiler">
    <xs:annotation>
      <xs:documentation>
        Defines one or more library components and their metadata. The components can be mechanisms, smart components or other types that derive from GraphicComponent.
        A file using this schema can be used to build library files (.rslib) using LibraryCompiler.exe.
        It can also (if named LibraryTemplates.xml) be used in RobotStudio to dynamically generate a component from source data, based on a requested file name.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Include" type="TInclude" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="DefaultProperties" type="TDocumentProperties" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>Specifies default metadata for the generated components. Properties can be overriden in the Library or Variant element. </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Library" type="TLibrary" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
      <xs:attribute name="resources" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>The base name (excluding language specifier and .xml extension) of xml files that contain localized resources for SmartComponents. </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>
